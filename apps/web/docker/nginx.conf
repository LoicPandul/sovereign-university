upstream metadata_server {
    server unix:/var/run/nginx.metadata-server.sock;
}

server {
    listen unix:/var/run/nginx.metadata-server.sock;

    add_header X-Title "Plan B Network - Custom Title" always;
    add_header X-Description "Custom Description" always;
    add_header X-Locale "fr_FR" always;
    add_header X-Image "https://planb.network/assets/lugano-CtUShZFl.webp" always;
    add_header X-Type "website" always;

    return 200;
}

server {
    listen 80;
    server_name _;

    gzip on;
    gzip_disable "msie6";

    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml/javascript
        font/ttf;

    root /usr/share/nginx/html;

    # Virtual host for the metadata request
    location = @metadata {
        internal;

        proxy_pass http://metadata_server$request_uri;
    }

    # Match hashed assets and set cache control to immutable
    location ~ "^/assets/(?<filename>.+)\-(?<hash>[\w\-]{8})\.(?<extension>\w+)$" {
        expires 1y;
        # Cache-Control: public, immutable, stale-while-revalidate: 1 year, stale-if-error: 1 year
        add_header Cache-Control "public, immutable, stale-while-revalidate=31536000, stale-if-error=31536000";
        add_header X-Hash-Match $hash;
    }

    # Match locales and set cache control to 10 minutes
    location /locales {
        expires 30s;

        # Cache-Control: public, stale-while-revalidate: 1 day, stale-if-error: 1 day
        add_header Cache-Control "public, stale-while-revalidate=86400, stale-if-error=86400";
    }

    # Set the expires header to 30 minutes for all other files
    location ~ ".*(\.).*$" {
        access_log off;
        expires 30m;
    }

    # Match the index.html and set the metadata
    location / {
        try_files /index.html =404;

        # Call the metadata request and set the title
        auth_request @metadata;
        auth_request_set $title  $upstream_http_x_title;
        auth_request_set $desc   $upstream_http_x_description;
        auth_request_set $locale $upstream_http_x_locale;
        auth_request_set $image  $upstream_http_x_image;
        auth_request_set $type   $upstream_http_x_type; # https://ogp.me/#types

        # Debugging headers
        add_header X-Index-Match "true" always;

        # Set the expires header to 30 seconds
        expires 30s;

        # Replace the title with the response from the metadata request
        # For more information see
        #  - http://nginx.org/en/docs/http/ngx_http_sub_module.html
        #  - https://developer.x.com/en/docs/x-for-websites/cards/overview/markup
        #  - https://socialsharepreview.com/
        #  - https://ogp.me/
        sub_filter_types text/html;
        sub_filter '<title>Plan B Network</title>' "
            <title>$title</title>
            <meta name=\"description\" content=\"$desc\" />
            <meta property=\"og:title\" content=\"$title\" />
            <meta property=\"twitter:title\" content=\"$title\" />
            <meta property=\"og:description\" content=\"$desc\" />
            <meta property=\"twitter:description\" content=\"$desc\" />
            <meta property=\"og:locale\" content=\"$locale\" />
            <meta property=\"og:image\" content=\"$image\" />
            <meta property=\"twitter:image\" content=\"$image\" />
            <meta property=\"twitter:card\" content=\"summary\" />
            <meta property=\"og:type\" content=\"$type\" />
        ";
    }
}
