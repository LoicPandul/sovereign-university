/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as IndexImport } from './routes/index';
import { Route as DashboardDashboardImport } from './routes/dashboard/_dashboard';
import { Route as ContentTutorialsIndexImport } from './routes/_content/tutorials/index';
import { Route as ContentResourcesIndexImport } from './routes/_content/resources/index';
import { Route as ContentEventsIndexImport } from './routes/_content/events/index';
import { Route as ContentCoursesIndexImport } from './routes/_content/courses/index';
import { Route as DashboardDashboardProfileImport } from './routes/dashboard/_dashboard/profile';
import { Route as DashboardDashboardCoursesImport } from './routes/dashboard/_dashboard/courses';
import { Route as DashboardDashboardCalendarImport } from './routes/dashboard/_dashboard/calendar';
import { Route as DashboardDashboardBookingsImport } from './routes/dashboard/_dashboard/bookings';
import { Route as DashboardDashboardBcertificateImport } from './routes/dashboard/_dashboard/bcertificate';
import { Route as DashboardDashboardAdministrationImport } from './routes/dashboard/_dashboard/administration';
import { Route as ContentTutorialsCategoryImport } from './routes/_content/tutorials/$category';
import { Route as ContentResourcesPodcastsImport } from './routes/_content/resources/podcasts';
import { Route as ContentResourcesGlossaryImport } from './routes/_content/resources/glossary';
import { Route as ContentResourcesConferencesImport } from './routes/_content/resources/conferences';
import { Route as ContentResourcesBuildersImport } from './routes/_content/resources/builders';
import { Route as ContentResourcesBooksImport } from './routes/_content/resources/books';
import { Route as ContentResourcesBetImport } from './routes/_content/resources/bet';
import { Route as ContentEventsEventIdImport } from './routes/_content/events/$eventId';
import { Route as ContentCoursesCourseIdImport } from './routes/_content/courses/$courseId';
import { Route as ContentMiscUnderConstructionImport } from './routes/_content/_misc/under-construction';
import { Route as ContentMiscTermsAndConditionsImport } from './routes/_content/_misc/terms-and-conditions';
import { Route as ContentMiscProfessorsImport } from './routes/_content/_misc/professors';
import { Route as ContentMiscNodeNetworkImport } from './routes/_content/_misc/node-network';
import { Route as ContentMiscManifestoImport } from './routes/_content/_misc/manifesto';
import { Route as ContentMiscBCertificateImport } from './routes/_content/_misc/b-certificate';
import { Route as ContentMiscAboutImport } from './routes/_content/_misc/about';
import { Route as ContentTutorialsCategoryIndexImport } from './routes/_content/tutorials/$category/index';
import { Route as ContentCoursesCourseIdIndexImport } from './routes/_content/courses/$courseId/index';
import { Route as ContentMiscPublicCommunicationIndexImport } from './routes/_content/_misc/public-communication/index';
import { Route as DashboardDashboardProfessorCoursesImport } from './routes/dashboard/_dashboard/professor/courses';
import { Route as ContentTutorialsCategoryNameImport } from './routes/_content/tutorials/$category/$name';
import { Route as ContentResourcesWordWordIdImport } from './routes/_content/resources/word.$wordId';
import { Route as ContentResourcesPodcastPodcastIdImport } from './routes/_content/resources/podcast.$podcastId';
import { Route as ContentResourcesConferenceConferenceIdImport } from './routes/_content/resources/conference.$conferenceId';
import { Route as ContentResourcesBuilderBuilderIdImport } from './routes/_content/resources/builder.$builderId';
import { Route as ContentResourcesBookBookIdImport } from './routes/_content/resources/book.$bookId';
import { Route as ContentCoursesCourseIdChapterIdImport } from './routes/_content/courses/$courseId/$chapterId';
import { Route as ContentMiscValidateEmailTokenImport } from './routes/_content/_misc/validate-email.$token';
import { Route as ContentMiscResetPasswordTokenImport } from './routes/_content/_misc/reset-password.$token';
import { Route as ContentMiscProfessorProfessorNameProfessorIdImport } from './routes/_content/_misc/professor.$professorName-$professorId';
import { Route as ContentMiscPublicCommunicationLegalInformationIndexImport } from './routes/_content/_misc/public-communication/legal-information/index';
import { Route as ContentMiscPublicCommunicationBlogsAndNewsIndexImport } from './routes/_content/_misc/public-communication/blogs-and-news/index';
import { Route as ContentMiscPublicCommunicationLegalInformationPrivacyInformationImport } from './routes/_content/_misc/public-communication/legal-information/privacy-information';
import { Route as ContentMiscPublicCommunicationLegalInformationGeneralInformationImport } from './routes/_content/_misc/public-communication/legal-information/general-information';
import { Route as ContentMiscPublicCommunicationLegalInformationCookiesInformationImport } from './routes/_content/_misc/public-communication/legal-information/cookies-information';
import { Route as ContentMiscPublicCommunicationLegalInformationContactInformationImport } from './routes/_content/_misc/public-communication/legal-information/contact-information';
import { Route as ContentMiscPublicCommunicationBlogsAndNewsCategoryIndexImport } from './routes/_content/_misc/public-communication/blogs-and-news/$category/index';
import { Route as ContentMiscPublicCommunicationBlogsAndNewsCategoryNameImport } from './routes/_content/_misc/public-communication/blogs-and-news/$category/$name';

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')();

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const DashboardDashboardRoute = DashboardDashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => DashboardRoute,
} as any);

const ContentTutorialsIndexRoute = ContentTutorialsIndexImport.update({
  path: '/tutorials/',
  getParentRoute: () => rootRoute,
} as any);

const ContentResourcesIndexRoute = ContentResourcesIndexImport.update({
  path: '/resources/',
  getParentRoute: () => rootRoute,
} as any);

const ContentEventsIndexRoute = ContentEventsIndexImport.update({
  path: '/events/',
  getParentRoute: () => rootRoute,
} as any);

const ContentCoursesIndexRoute = ContentCoursesIndexImport.update({
  path: '/courses/',
  getParentRoute: () => rootRoute,
} as any);

const DashboardDashboardProfileRoute = DashboardDashboardProfileImport.update({
  path: '/profile',
  getParentRoute: () => DashboardDashboardRoute,
} as any);

const DashboardDashboardCoursesRoute = DashboardDashboardCoursesImport.update({
  path: '/courses',
  getParentRoute: () => DashboardDashboardRoute,
} as any);

const DashboardDashboardCalendarRoute = DashboardDashboardCalendarImport.update(
  {
    path: '/calendar',
    getParentRoute: () => DashboardDashboardRoute,
  } as any,
);

const DashboardDashboardBookingsRoute = DashboardDashboardBookingsImport.update(
  {
    path: '/bookings',
    getParentRoute: () => DashboardDashboardRoute,
  } as any,
);

const DashboardDashboardBcertificateRoute =
  DashboardDashboardBcertificateImport.update({
    path: '/bcertificate',
    getParentRoute: () => DashboardDashboardRoute,
  } as any);

const DashboardDashboardAdministrationRoute =
  DashboardDashboardAdministrationImport.update({
    path: '/administration',
    getParentRoute: () => DashboardDashboardRoute,
  } as any);

const ContentTutorialsCategoryRoute = ContentTutorialsCategoryImport.update({
  path: '/tutorials/$category',
  getParentRoute: () => rootRoute,
} as any);

const ContentResourcesPodcastsRoute = ContentResourcesPodcastsImport.update({
  path: '/resources/podcasts',
  getParentRoute: () => rootRoute,
} as any);

const ContentResourcesGlossaryRoute = ContentResourcesGlossaryImport.update({
  path: '/resources/glossary',
  getParentRoute: () => rootRoute,
} as any);

const ContentResourcesConferencesRoute =
  ContentResourcesConferencesImport.update({
    path: '/resources/conferences',
    getParentRoute: () => rootRoute,
  } as any);

const ContentResourcesBuildersRoute = ContentResourcesBuildersImport.update({
  path: '/resources/builders',
  getParentRoute: () => rootRoute,
} as any);

const ContentResourcesBooksRoute = ContentResourcesBooksImport.update({
  path: '/resources/books',
  getParentRoute: () => rootRoute,
} as any);

const ContentResourcesBetRoute = ContentResourcesBetImport.update({
  path: '/resources/bet',
  getParentRoute: () => rootRoute,
} as any);

const ContentEventsEventIdRoute = ContentEventsEventIdImport.update({
  path: '/events/$eventId',
  getParentRoute: () => rootRoute,
} as any);

const ContentCoursesCourseIdRoute = ContentCoursesCourseIdImport.update({
  path: '/courses/$courseId',
  getParentRoute: () => rootRoute,
} as any);

const ContentMiscUnderConstructionRoute =
  ContentMiscUnderConstructionImport.update({
    path: '/under-construction',
    getParentRoute: () => rootRoute,
  } as any);

const ContentMiscTermsAndConditionsRoute =
  ContentMiscTermsAndConditionsImport.update({
    path: '/terms-and-conditions',
    getParentRoute: () => rootRoute,
  } as any);

const ContentMiscProfessorsRoute = ContentMiscProfessorsImport.update({
  path: '/professors',
  getParentRoute: () => rootRoute,
} as any);

const ContentMiscNodeNetworkRoute = ContentMiscNodeNetworkImport.update({
  path: '/node-network',
  getParentRoute: () => rootRoute,
} as any);

const ContentMiscManifestoRoute = ContentMiscManifestoImport.update({
  path: '/manifesto',
  getParentRoute: () => rootRoute,
} as any);

const ContentMiscBCertificateRoute = ContentMiscBCertificateImport.update({
  path: '/b-certificate',
  getParentRoute: () => rootRoute,
} as any);

const ContentMiscAboutRoute = ContentMiscAboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any);

const ContentTutorialsCategoryIndexRoute =
  ContentTutorialsCategoryIndexImport.update({
    path: '/',
    getParentRoute: () => ContentTutorialsCategoryRoute,
  } as any);

const ContentCoursesCourseIdIndexRoute =
  ContentCoursesCourseIdIndexImport.update({
    path: '/',
    getParentRoute: () => ContentCoursesCourseIdRoute,
  } as any);

const ContentMiscPublicCommunicationIndexRoute =
  ContentMiscPublicCommunicationIndexImport.update({
    path: '/public-communication/',
    getParentRoute: () => rootRoute,
  } as any);

const DashboardDashboardProfessorCoursesRoute =
  DashboardDashboardProfessorCoursesImport.update({
    path: '/professor/courses',
    getParentRoute: () => DashboardDashboardRoute,
  } as any);

const ContentTutorialsCategoryNameRoute =
  ContentTutorialsCategoryNameImport.update({
    path: '/$name',
    getParentRoute: () => ContentTutorialsCategoryRoute,
  } as any);

const ContentResourcesWordWordIdRoute = ContentResourcesWordWordIdImport.update(
  {
    path: '/resources/word/$wordId',
    getParentRoute: () => rootRoute,
  } as any,
);

const ContentResourcesPodcastPodcastIdRoute =
  ContentResourcesPodcastPodcastIdImport.update({
    path: '/resources/podcast/$podcastId',
    getParentRoute: () => rootRoute,
  } as any);

const ContentResourcesConferenceConferenceIdRoute =
  ContentResourcesConferenceConferenceIdImport.update({
    path: '/resources/conference/$conferenceId',
    getParentRoute: () => rootRoute,
  } as any);

const ContentResourcesBuilderBuilderIdRoute =
  ContentResourcesBuilderBuilderIdImport.update({
    path: '/resources/builder/$builderId',
    getParentRoute: () => rootRoute,
  } as any);

const ContentResourcesBookBookIdRoute = ContentResourcesBookBookIdImport.update(
  {
    path: '/resources/book/$bookId',
    getParentRoute: () => rootRoute,
  } as any,
);

const ContentCoursesCourseIdChapterIdRoute =
  ContentCoursesCourseIdChapterIdImport.update({
    path: '/$chapterId',
    getParentRoute: () => ContentCoursesCourseIdRoute,
  } as any);

const ContentMiscValidateEmailTokenRoute =
  ContentMiscValidateEmailTokenImport.update({
    path: '/validate-email/$token',
    getParentRoute: () => rootRoute,
  } as any);

const ContentMiscResetPasswordTokenRoute =
  ContentMiscResetPasswordTokenImport.update({
    path: '/reset-password/$token',
    getParentRoute: () => rootRoute,
  } as any);

const ContentMiscProfessorProfessorNameProfessorIdRoute =
  ContentMiscProfessorProfessorNameProfessorIdImport.update({
    path: '/professor/$professorName-$professorId',
    getParentRoute: () => rootRoute,
  } as any);

const ContentMiscPublicCommunicationLegalInformationIndexRoute =
  ContentMiscPublicCommunicationLegalInformationIndexImport.update({
    path: '/public-communication/legal-information/',
    getParentRoute: () => rootRoute,
  } as any);

const ContentMiscPublicCommunicationBlogsAndNewsIndexRoute =
  ContentMiscPublicCommunicationBlogsAndNewsIndexImport.update({
    path: '/public-communication/blogs-and-news/',
    getParentRoute: () => rootRoute,
  } as any);

const ContentMiscPublicCommunicationLegalInformationPrivacyInformationRoute =
  ContentMiscPublicCommunicationLegalInformationPrivacyInformationImport.update(
    {
      path: '/public-communication/legal-information/privacy-information',
      getParentRoute: () => rootRoute,
    } as any,
  );

const ContentMiscPublicCommunicationLegalInformationGeneralInformationRoute =
  ContentMiscPublicCommunicationLegalInformationGeneralInformationImport.update(
    {
      path: '/public-communication/legal-information/general-information',
      getParentRoute: () => rootRoute,
    } as any,
  );

const ContentMiscPublicCommunicationLegalInformationCookiesInformationRoute =
  ContentMiscPublicCommunicationLegalInformationCookiesInformationImport.update(
    {
      path: '/public-communication/legal-information/cookies-information',
      getParentRoute: () => rootRoute,
    } as any,
  );

const ContentMiscPublicCommunicationLegalInformationContactInformationRoute =
  ContentMiscPublicCommunicationLegalInformationContactInformationImport.update(
    {
      path: '/public-communication/legal-information/contact-information',
      getParentRoute: () => rootRoute,
    } as any,
  );

const ContentMiscPublicCommunicationBlogsAndNewsCategoryIndexRoute =
  ContentMiscPublicCommunicationBlogsAndNewsCategoryIndexImport.update({
    path: '/public-communication/blogs-and-news/$category/',
    getParentRoute: () => rootRoute,
  } as any);

const ContentMiscPublicCommunicationBlogsAndNewsCategoryNameRoute =
  ContentMiscPublicCommunicationBlogsAndNewsCategoryNameImport.update({
    path: '/public-communication/blogs-and-news/$category/$name',
    getParentRoute: () => rootRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/dashboard': {
      id: '/dashboard';
      path: '/dashboard';
      fullPath: '/dashboard';
      preLoaderRoute: typeof DashboardImport;
      parentRoute: typeof rootRoute;
    };
    '/dashboard/_dashboard': {
      id: '/dashboard/_dashboard';
      path: '/dashboard';
      fullPath: '/dashboard';
      preLoaderRoute: typeof DashboardDashboardImport;
      parentRoute: typeof DashboardRoute;
    };
    '/_content/_misc/about': {
      id: '/_content/_misc/about';
      path: '/about';
      fullPath: '/about';
      preLoaderRoute: typeof ContentMiscAboutImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/b-certificate': {
      id: '/_content/_misc/b-certificate';
      path: '/b-certificate';
      fullPath: '/b-certificate';
      preLoaderRoute: typeof ContentMiscBCertificateImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/manifesto': {
      id: '/_content/_misc/manifesto';
      path: '/manifesto';
      fullPath: '/manifesto';
      preLoaderRoute: typeof ContentMiscManifestoImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/node-network': {
      id: '/_content/_misc/node-network';
      path: '/node-network';
      fullPath: '/node-network';
      preLoaderRoute: typeof ContentMiscNodeNetworkImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/professors': {
      id: '/_content/_misc/professors';
      path: '/professors';
      fullPath: '/professors';
      preLoaderRoute: typeof ContentMiscProfessorsImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/terms-and-conditions': {
      id: '/_content/_misc/terms-and-conditions';
      path: '/terms-and-conditions';
      fullPath: '/terms-and-conditions';
      preLoaderRoute: typeof ContentMiscTermsAndConditionsImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/under-construction': {
      id: '/_content/_misc/under-construction';
      path: '/under-construction';
      fullPath: '/under-construction';
      preLoaderRoute: typeof ContentMiscUnderConstructionImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/courses/$courseId': {
      id: '/_content/courses/$courseId';
      path: '/courses/$courseId';
      fullPath: '/courses/$courseId';
      preLoaderRoute: typeof ContentCoursesCourseIdImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/events/$eventId': {
      id: '/_content/events/$eventId';
      path: '/events/$eventId';
      fullPath: '/events/$eventId';
      preLoaderRoute: typeof ContentEventsEventIdImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/resources/bet': {
      id: '/_content/resources/bet';
      path: '/resources/bet';
      fullPath: '/resources/bet';
      preLoaderRoute: typeof ContentResourcesBetImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/resources/books': {
      id: '/_content/resources/books';
      path: '/resources/books';
      fullPath: '/resources/books';
      preLoaderRoute: typeof ContentResourcesBooksImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/resources/builders': {
      id: '/_content/resources/builders';
      path: '/resources/builders';
      fullPath: '/resources/builders';
      preLoaderRoute: typeof ContentResourcesBuildersImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/resources/conferences': {
      id: '/_content/resources/conferences';
      path: '/resources/conferences';
      fullPath: '/resources/conferences';
      preLoaderRoute: typeof ContentResourcesConferencesImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/resources/glossary': {
      id: '/_content/resources/glossary';
      path: '/resources/glossary';
      fullPath: '/resources/glossary';
      preLoaderRoute: typeof ContentResourcesGlossaryImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/resources/podcasts': {
      id: '/_content/resources/podcasts';
      path: '/resources/podcasts';
      fullPath: '/resources/podcasts';
      preLoaderRoute: typeof ContentResourcesPodcastsImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/tutorials/$category': {
      id: '/_content/tutorials/$category';
      path: '/tutorials/$category';
      fullPath: '/tutorials/$category';
      preLoaderRoute: typeof ContentTutorialsCategoryImport;
      parentRoute: typeof rootRoute;
    };
    '/dashboard/_dashboard/administration': {
      id: '/dashboard/_dashboard/administration';
      path: '/administration';
      fullPath: '/dashboard/administration';
      preLoaderRoute: typeof DashboardDashboardAdministrationImport;
      parentRoute: typeof DashboardDashboardImport;
    };
    '/dashboard/_dashboard/bcertificate': {
      id: '/dashboard/_dashboard/bcertificate';
      path: '/bcertificate';
      fullPath: '/dashboard/bcertificate';
      preLoaderRoute: typeof DashboardDashboardBcertificateImport;
      parentRoute: typeof DashboardDashboardImport;
    };
    '/dashboard/_dashboard/bookings': {
      id: '/dashboard/_dashboard/bookings';
      path: '/bookings';
      fullPath: '/dashboard/bookings';
      preLoaderRoute: typeof DashboardDashboardBookingsImport;
      parentRoute: typeof DashboardDashboardImport;
    };
    '/dashboard/_dashboard/calendar': {
      id: '/dashboard/_dashboard/calendar';
      path: '/calendar';
      fullPath: '/dashboard/calendar';
      preLoaderRoute: typeof DashboardDashboardCalendarImport;
      parentRoute: typeof DashboardDashboardImport;
    };
    '/dashboard/_dashboard/courses': {
      id: '/dashboard/_dashboard/courses';
      path: '/courses';
      fullPath: '/dashboard/courses';
      preLoaderRoute: typeof DashboardDashboardCoursesImport;
      parentRoute: typeof DashboardDashboardImport;
    };
    '/dashboard/_dashboard/profile': {
      id: '/dashboard/_dashboard/profile';
      path: '/profile';
      fullPath: '/dashboard/profile';
      preLoaderRoute: typeof DashboardDashboardProfileImport;
      parentRoute: typeof DashboardDashboardImport;
    };
    '/_content/courses/': {
      id: '/_content/courses/';
      path: '/courses';
      fullPath: '/courses';
      preLoaderRoute: typeof ContentCoursesIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/events/': {
      id: '/_content/events/';
      path: '/events';
      fullPath: '/events';
      preLoaderRoute: typeof ContentEventsIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/resources/': {
      id: '/_content/resources/';
      path: '/resources';
      fullPath: '/resources';
      preLoaderRoute: typeof ContentResourcesIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/tutorials/': {
      id: '/_content/tutorials/';
      path: '/tutorials';
      fullPath: '/tutorials';
      preLoaderRoute: typeof ContentTutorialsIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/professor/$professorName-$professorId': {
      id: '/_content/_misc/professor/$professorName-$professorId';
      path: '/professor/$professorName-$professorId';
      fullPath: '/professor/$professorName-$professorId';
      preLoaderRoute: typeof ContentMiscProfessorProfessorNameProfessorIdImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/reset-password/$token': {
      id: '/_content/_misc/reset-password/$token';
      path: '/reset-password/$token';
      fullPath: '/reset-password/$token';
      preLoaderRoute: typeof ContentMiscResetPasswordTokenImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/validate-email/$token': {
      id: '/_content/_misc/validate-email/$token';
      path: '/validate-email/$token';
      fullPath: '/validate-email/$token';
      preLoaderRoute: typeof ContentMiscValidateEmailTokenImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/courses/$courseId/$chapterId': {
      id: '/_content/courses/$courseId/$chapterId';
      path: '/$chapterId';
      fullPath: '/courses/$courseId/$chapterId';
      preLoaderRoute: typeof ContentCoursesCourseIdChapterIdImport;
      parentRoute: typeof ContentCoursesCourseIdImport;
    };
    '/_content/resources/book/$bookId': {
      id: '/_content/resources/book/$bookId';
      path: '/resources/book/$bookId';
      fullPath: '/resources/book/$bookId';
      preLoaderRoute: typeof ContentResourcesBookBookIdImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/resources/builder/$builderId': {
      id: '/_content/resources/builder/$builderId';
      path: '/resources/builder/$builderId';
      fullPath: '/resources/builder/$builderId';
      preLoaderRoute: typeof ContentResourcesBuilderBuilderIdImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/resources/conference/$conferenceId': {
      id: '/_content/resources/conference/$conferenceId';
      path: '/resources/conference/$conferenceId';
      fullPath: '/resources/conference/$conferenceId';
      preLoaderRoute: typeof ContentResourcesConferenceConferenceIdImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/resources/podcast/$podcastId': {
      id: '/_content/resources/podcast/$podcastId';
      path: '/resources/podcast/$podcastId';
      fullPath: '/resources/podcast/$podcastId';
      preLoaderRoute: typeof ContentResourcesPodcastPodcastIdImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/resources/word/$wordId': {
      id: '/_content/resources/word/$wordId';
      path: '/resources/word/$wordId';
      fullPath: '/resources/word/$wordId';
      preLoaderRoute: typeof ContentResourcesWordWordIdImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/tutorials/$category/$name': {
      id: '/_content/tutorials/$category/$name';
      path: '/$name';
      fullPath: '/tutorials/$category/$name';
      preLoaderRoute: typeof ContentTutorialsCategoryNameImport;
      parentRoute: typeof ContentTutorialsCategoryImport;
    };
    '/dashboard/_dashboard/professor/courses': {
      id: '/dashboard/_dashboard/professor/courses';
      path: '/professor/courses';
      fullPath: '/dashboard/professor/courses';
      preLoaderRoute: typeof DashboardDashboardProfessorCoursesImport;
      parentRoute: typeof DashboardDashboardImport;
    };
    '/_content/_misc/public-communication/': {
      id: '/_content/_misc/public-communication/';
      path: '/public-communication';
      fullPath: '/public-communication';
      preLoaderRoute: typeof ContentMiscPublicCommunicationIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/courses/$courseId/': {
      id: '/_content/courses/$courseId/';
      path: '/';
      fullPath: '/courses/$courseId/';
      preLoaderRoute: typeof ContentCoursesCourseIdIndexImport;
      parentRoute: typeof ContentCoursesCourseIdImport;
    };
    '/_content/tutorials/$category/': {
      id: '/_content/tutorials/$category/';
      path: '/';
      fullPath: '/tutorials/$category/';
      preLoaderRoute: typeof ContentTutorialsCategoryIndexImport;
      parentRoute: typeof ContentTutorialsCategoryImport;
    };
    '/_content/_misc/public-communication/legal-information/contact-information': {
      id: '/_content/_misc/public-communication/legal-information/contact-information';
      path: '/public-communication/legal-information/contact-information';
      fullPath: '/public-communication/legal-information/contact-information';
      preLoaderRoute: typeof ContentMiscPublicCommunicationLegalInformationContactInformationImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/public-communication/legal-information/cookies-information': {
      id: '/_content/_misc/public-communication/legal-information/cookies-information';
      path: '/public-communication/legal-information/cookies-information';
      fullPath: '/public-communication/legal-information/cookies-information';
      preLoaderRoute: typeof ContentMiscPublicCommunicationLegalInformationCookiesInformationImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/public-communication/legal-information/general-information': {
      id: '/_content/_misc/public-communication/legal-information/general-information';
      path: '/public-communication/legal-information/general-information';
      fullPath: '/public-communication/legal-information/general-information';
      preLoaderRoute: typeof ContentMiscPublicCommunicationLegalInformationGeneralInformationImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/public-communication/legal-information/privacy-information': {
      id: '/_content/_misc/public-communication/legal-information/privacy-information';
      path: '/public-communication/legal-information/privacy-information';
      fullPath: '/public-communication/legal-information/privacy-information';
      preLoaderRoute: typeof ContentMiscPublicCommunicationLegalInformationPrivacyInformationImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/public-communication/blogs-and-news/': {
      id: '/_content/_misc/public-communication/blogs-and-news/';
      path: '/public-communication/blogs-and-news';
      fullPath: '/public-communication/blogs-and-news';
      preLoaderRoute: typeof ContentMiscPublicCommunicationBlogsAndNewsIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/public-communication/legal-information/': {
      id: '/_content/_misc/public-communication/legal-information/';
      path: '/public-communication/legal-information';
      fullPath: '/public-communication/legal-information';
      preLoaderRoute: typeof ContentMiscPublicCommunicationLegalInformationIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/public-communication/blogs-and-news/$category/$name': {
      id: '/_content/_misc/public-communication/blogs-and-news/$category/$name';
      path: '/public-communication/blogs-and-news/$category/$name';
      fullPath: '/public-communication/blogs-and-news/$category/$name';
      preLoaderRoute: typeof ContentMiscPublicCommunicationBlogsAndNewsCategoryNameImport;
      parentRoute: typeof rootRoute;
    };
    '/_content/_misc/public-communication/blogs-and-news/$category/': {
      id: '/_content/_misc/public-communication/blogs-and-news/$category/';
      path: '/public-communication/blogs-and-news/$category';
      fullPath: '/public-communication/blogs-and-news/$category';
      preLoaderRoute: typeof ContentMiscPublicCommunicationBlogsAndNewsCategoryIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  DashboardRoute: DashboardRoute.addChildren({
    DashboardDashboardRoute: DashboardDashboardRoute.addChildren({
      DashboardDashboardAdministrationRoute,
      DashboardDashboardBcertificateRoute,
      DashboardDashboardBookingsRoute,
      DashboardDashboardCalendarRoute,
      DashboardDashboardCoursesRoute,
      DashboardDashboardProfileRoute,
      DashboardDashboardProfessorCoursesRoute,
    }),
  }),
  ContentMiscAboutRoute,
  ContentMiscBCertificateRoute,
  ContentMiscManifestoRoute,
  ContentMiscNodeNetworkRoute,
  ContentMiscProfessorsRoute,
  ContentMiscTermsAndConditionsRoute,
  ContentMiscUnderConstructionRoute,
  ContentCoursesCourseIdRoute: ContentCoursesCourseIdRoute.addChildren({
    ContentCoursesCourseIdChapterIdRoute,
    ContentCoursesCourseIdIndexRoute,
  }),
  ContentEventsEventIdRoute,
  ContentResourcesBetRoute,
  ContentResourcesBooksRoute,
  ContentResourcesBuildersRoute,
  ContentResourcesConferencesRoute,
  ContentResourcesGlossaryRoute,
  ContentResourcesPodcastsRoute,
  ContentTutorialsCategoryRoute: ContentTutorialsCategoryRoute.addChildren({
    ContentTutorialsCategoryNameRoute,
    ContentTutorialsCategoryIndexRoute,
  }),
  ContentCoursesIndexRoute,
  ContentEventsIndexRoute,
  ContentResourcesIndexRoute,
  ContentTutorialsIndexRoute,
  ContentMiscProfessorProfessorNameProfessorIdRoute,
  ContentMiscResetPasswordTokenRoute,
  ContentMiscValidateEmailTokenRoute,
  ContentResourcesBookBookIdRoute,
  ContentResourcesBuilderBuilderIdRoute,
  ContentResourcesConferenceConferenceIdRoute,
  ContentResourcesPodcastPodcastIdRoute,
  ContentResourcesWordWordIdRoute,
  ContentMiscPublicCommunicationIndexRoute,
  ContentMiscPublicCommunicationLegalInformationContactInformationRoute,
  ContentMiscPublicCommunicationLegalInformationCookiesInformationRoute,
  ContentMiscPublicCommunicationLegalInformationGeneralInformationRoute,
  ContentMiscPublicCommunicationLegalInformationPrivacyInformationRoute,
  ContentMiscPublicCommunicationBlogsAndNewsIndexRoute,
  ContentMiscPublicCommunicationLegalInformationIndexRoute,
  ContentMiscPublicCommunicationBlogsAndNewsCategoryNameRoute,
  ContentMiscPublicCommunicationBlogsAndNewsCategoryIndexRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/_content/_misc/about",
        "/_content/_misc/b-certificate",
        "/_content/_misc/manifesto",
        "/_content/_misc/node-network",
        "/_content/_misc/professors",
        "/_content/_misc/terms-and-conditions",
        "/_content/_misc/under-construction",
        "/_content/courses/$courseId",
        "/_content/events/$eventId",
        "/_content/resources/bet",
        "/_content/resources/books",
        "/_content/resources/builders",
        "/_content/resources/conferences",
        "/_content/resources/glossary",
        "/_content/resources/podcasts",
        "/_content/tutorials/$category",
        "/_content/courses/",
        "/_content/events/",
        "/_content/resources/",
        "/_content/tutorials/",
        "/_content/_misc/professor/$professorName-$professorId",
        "/_content/_misc/reset-password/$token",
        "/_content/_misc/validate-email/$token",
        "/_content/resources/book/$bookId",
        "/_content/resources/builder/$builderId",
        "/_content/resources/conference/$conferenceId",
        "/_content/resources/podcast/$podcastId",
        "/_content/resources/word/$wordId",
        "/_content/_misc/public-communication/",
        "/_content/_misc/public-communication/legal-information/contact-information",
        "/_content/_misc/public-communication/legal-information/cookies-information",
        "/_content/_misc/public-communication/legal-information/general-information",
        "/_content/_misc/public-communication/legal-information/privacy-information",
        "/_content/_misc/public-communication/blogs-and-news/",
        "/_content/_misc/public-communication/legal-information/",
        "/_content/_misc/public-communication/blogs-and-news/$category/$name",
        "/_content/_misc/public-communication/blogs-and-news/$category/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_dashboard"
      ]
    },
    "/dashboard/_dashboard": {
      "filePath": "dashboard/_dashboard.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_dashboard/administration",
        "/dashboard/_dashboard/bcertificate",
        "/dashboard/_dashboard/bookings",
        "/dashboard/_dashboard/calendar",
        "/dashboard/_dashboard/courses",
        "/dashboard/_dashboard/profile",
        "/dashboard/_dashboard/professor/courses"
      ]
    },
    "/_content/_misc/about": {
      "filePath": "_content/_misc/about.tsx"
    },
    "/_content/_misc/b-certificate": {
      "filePath": "_content/_misc/b-certificate.tsx"
    },
    "/_content/_misc/manifesto": {
      "filePath": "_content/_misc/manifesto.tsx"
    },
    "/_content/_misc/node-network": {
      "filePath": "_content/_misc/node-network.tsx"
    },
    "/_content/_misc/professors": {
      "filePath": "_content/_misc/professors.tsx"
    },
    "/_content/_misc/terms-and-conditions": {
      "filePath": "_content/_misc/terms-and-conditions.tsx"
    },
    "/_content/_misc/under-construction": {
      "filePath": "_content/_misc/under-construction.tsx"
    },
    "/_content/courses/$courseId": {
      "filePath": "_content/courses/$courseId.tsx",
      "children": [
        "/_content/courses/$courseId/$chapterId",
        "/_content/courses/$courseId/"
      ]
    },
    "/_content/events/$eventId": {
      "filePath": "_content/events/$eventId.tsx"
    },
    "/_content/resources/bet": {
      "filePath": "_content/resources/bet.tsx"
    },
    "/_content/resources/books": {
      "filePath": "_content/resources/books.tsx"
    },
    "/_content/resources/builders": {
      "filePath": "_content/resources/builders.tsx"
    },
    "/_content/resources/conferences": {
      "filePath": "_content/resources/conferences.tsx"
    },
    "/_content/resources/glossary": {
      "filePath": "_content/resources/glossary.tsx"
    },
    "/_content/resources/podcasts": {
      "filePath": "_content/resources/podcasts.tsx"
    },
    "/_content/tutorials/$category": {
      "filePath": "_content/tutorials/$category.tsx",
      "children": [
        "/_content/tutorials/$category/$name",
        "/_content/tutorials/$category/"
      ]
    },
    "/dashboard/_dashboard/administration": {
      "filePath": "dashboard/_dashboard/administration.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/dashboard/_dashboard/bcertificate": {
      "filePath": "dashboard/_dashboard/bcertificate.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/dashboard/_dashboard/bookings": {
      "filePath": "dashboard/_dashboard/bookings.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/dashboard/_dashboard/calendar": {
      "filePath": "dashboard/_dashboard/calendar.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/dashboard/_dashboard/courses": {
      "filePath": "dashboard/_dashboard/courses.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/dashboard/_dashboard/profile": {
      "filePath": "dashboard/_dashboard/profile.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/_content/courses/": {
      "filePath": "_content/courses/index.tsx"
    },
    "/_content/events/": {
      "filePath": "_content/events/index.tsx"
    },
    "/_content/resources/": {
      "filePath": "_content/resources/index.tsx"
    },
    "/_content/tutorials/": {
      "filePath": "_content/tutorials/index.tsx"
    },
    "/_content/_misc/professor/$professorName-$professorId": {
      "filePath": "_content/_misc/professor.$professorName-$professorId.tsx"
    },
    "/_content/_misc/reset-password/$token": {
      "filePath": "_content/_misc/reset-password.$token.tsx"
    },
    "/_content/_misc/validate-email/$token": {
      "filePath": "_content/_misc/validate-email.$token.tsx"
    },
    "/_content/courses/$courseId/$chapterId": {
      "filePath": "_content/courses/$courseId/$chapterId.tsx",
      "parent": "/_content/courses/$courseId"
    },
    "/_content/resources/book/$bookId": {
      "filePath": "_content/resources/book.$bookId.tsx"
    },
    "/_content/resources/builder/$builderId": {
      "filePath": "_content/resources/builder.$builderId.tsx"
    },
    "/_content/resources/conference/$conferenceId": {
      "filePath": "_content/resources/conference.$conferenceId.tsx"
    },
    "/_content/resources/podcast/$podcastId": {
      "filePath": "_content/resources/podcast.$podcastId.tsx"
    },
    "/_content/resources/word/$wordId": {
      "filePath": "_content/resources/word.$wordId.tsx"
    },
    "/_content/tutorials/$category/$name": {
      "filePath": "_content/tutorials/$category/$name.tsx",
      "parent": "/_content/tutorials/$category"
    },
    "/dashboard/_dashboard/professor/courses": {
      "filePath": "dashboard/_dashboard/professor/courses.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/_content/_misc/public-communication/": {
      "filePath": "_content/_misc/public-communication/index.tsx"
    },
    "/_content/courses/$courseId/": {
      "filePath": "_content/courses/$courseId/index.tsx",
      "parent": "/_content/courses/$courseId"
    },
    "/_content/tutorials/$category/": {
      "filePath": "_content/tutorials/$category/index.tsx",
      "parent": "/_content/tutorials/$category"
    },
    "/_content/_misc/public-communication/legal-information/contact-information": {
      "filePath": "_content/_misc/public-communication/legal-information/contact-information.tsx"
    },
    "/_content/_misc/public-communication/legal-information/cookies-information": {
      "filePath": "_content/_misc/public-communication/legal-information/cookies-information.tsx"
    },
    "/_content/_misc/public-communication/legal-information/general-information": {
      "filePath": "_content/_misc/public-communication/legal-information/general-information.tsx"
    },
    "/_content/_misc/public-communication/legal-information/privacy-information": {
      "filePath": "_content/_misc/public-communication/legal-information/privacy-information.tsx"
    },
    "/_content/_misc/public-communication/blogs-and-news/": {
      "filePath": "_content/_misc/public-communication/blogs-and-news/index.tsx"
    },
    "/_content/_misc/public-communication/legal-information/": {
      "filePath": "_content/_misc/public-communication/legal-information/index.tsx"
    },
    "/_content/_misc/public-communication/blogs-and-news/$category/$name": {
      "filePath": "_content/_misc/public-communication/blogs-and-news/$category/$name.tsx"
    },
    "/_content/_misc/public-communication/blogs-and-news/$category/": {
      "filePath": "_content/_misc/public-communication/blogs-and-news/$category/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
